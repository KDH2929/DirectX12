// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_message.proto

#include "game_message.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace game {

inline constexpr Vector3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector3::Vector3(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Vector3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vector3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vector3DefaultTypeInternal() {}
  union {
    Vector3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vector3DefaultTypeInternal _Vector3_default_instance_;

inline constexpr Result::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_code_{static_cast< ::game::StatusCode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Result::Result(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResultDefaultTypeInternal() {}
  union {
    Result _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResultDefaultTypeInternal _Result_default_instance_;

inline constexpr LoginRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LoginRequest::LoginRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginRequestDefaultTypeInternal() {}
  union {
    LoginRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;

inline constexpr JoinRoomRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : room_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JoinRoomRequest::JoinRoomRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JoinRoomRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinRoomRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinRoomRequestDefaultTypeInternal() {}
  union {
    JoinRoomRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinRoomRequestDefaultTypeInternal _JoinRoomRequest_default_instance_;

inline constexpr HitEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : attacker_id_{0u},
        target_id_{0u},
        bullet_id_{0u},
        damage_{0u},
        server_time_ms_{::uint64_t{0u}},
        target_hp_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HitEvent::HitEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HitEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HitEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HitEventDefaultTypeInternal() {}
  union {
    HitEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HitEventDefaultTypeInternal _HitEvent_default_instance_;

inline constexpr Header::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sequence_{::uint64_t{0u}},
        server_time_ms_{::uint64_t{0u}},
        player_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Header::Header(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeaderDefaultTypeInternal() {}
  union {
    Header _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeaderDefaultTypeInternal _Header_default_instance_;

inline constexpr ChatSend::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ChatSend::ChatSend(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChatSendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChatSendDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChatSendDefaultTypeInternal() {}
  union {
    ChatSend _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChatSendDefaultTypeInternal _ChatSend_default_instance_;

inline constexpr ChatEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_time_ms_{::uint64_t{0u}},
        player_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ChatEvent::ChatEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChatEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChatEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChatEventDefaultTypeInternal() {}
  union {
    ChatEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChatEventDefaultTypeInternal _ChatEvent_default_instance_;

inline constexpr PlayerInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        player_id_{0u},
        hp_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerInfo::PlayerInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerInfoDefaultTypeInternal() {}
  union {
    PlayerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerInfoDefaultTypeInternal _PlayerInfo_default_instance_;

inline constexpr MoveInput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        direction_{nullptr},
        position_{nullptr},
        tick_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR MoveInput::MoveInput(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MoveInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveInputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveInputDefaultTypeInternal() {}
  union {
    MoveInput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveInputDefaultTypeInternal _MoveInput_default_instance_;

inline constexpr MoveEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        velocity_{nullptr},
        server_time_ms_{::uint64_t{0u}},
        player_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR MoveEvent::MoveEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MoveEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveEventDefaultTypeInternal() {}
  union {
    MoveEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveEventDefaultTypeInternal _MoveEvent_default_instance_;

inline constexpr LoginResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        player_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR LoginResponse::LoginResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginResponseDefaultTypeInternal() {}
  union {
    LoginResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;

inline constexpr FireInput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        direction_{nullptr},
        tick_{::uint64_t{0u}},
        weapon_id_{0u},
        seed_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR FireInput::FireInput(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FireInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FireInputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FireInputDefaultTypeInternal() {}
  union {
    FireInput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FireInputDefaultTypeInternal _FireInput_default_instance_;

inline constexpr FireEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        direction_{nullptr},
        player_id_{0u},
        bullet_id_{0u},
        server_time_ms_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR FireEvent::FireEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FireEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FireEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FireEventDefaultTypeInternal() {}
  union {
    FireEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FireEventDefaultTypeInternal _FireEvent_default_instance_;

inline constexpr PlayerStateUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : players_updated_{},
        players_removed_{},
        _players_removed_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerStateUpdate::PlayerStateUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerStateUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerStateUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerStateUpdateDefaultTypeInternal() {}
  union {
    PlayerStateUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerStateUpdateDefaultTypeInternal _PlayerStateUpdate_default_instance_;

inline constexpr JoinRoomResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        player_list_{},
        result_{nullptr},
        room_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR JoinRoomResponse::JoinRoomResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JoinRoomResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinRoomResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinRoomResponseDefaultTypeInternal() {}
  union {
    JoinRoomResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinRoomResponseDefaultTypeInternal _JoinRoomResponse_default_instance_;

inline constexpr AllPlayerList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : players_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AllPlayerList::AllPlayerList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AllPlayerListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllPlayerListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllPlayerListDefaultTypeInternal() {}
  union {
    AllPlayerList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllPlayerListDefaultTypeInternal _AllPlayerList_default_instance_;

inline constexpr GameMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr},
        payload_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GameMessage::GameMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameMessageDefaultTypeInternal() {}
  union {
    GameMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameMessageDefaultTypeInternal _GameMessage_default_instance_;
}  // namespace game
static ::_pb::Metadata file_level_metadata_game_5fmessage_2eproto[18];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_game_5fmessage_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_game_5fmessage_2eproto = nullptr;
const ::uint32_t TableStruct_game_5fmessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::game::Vector3, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::Vector3, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::game::Vector3, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::game::Vector3, _impl_.z_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::game::Result, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::Result, _impl_.status_code_),
    PROTOBUF_FIELD_OFFSET(::game::Result, _impl_.message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::game::Header, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::Header, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::game::Header, _impl_.sequence_),
    PROTOBUF_FIELD_OFFSET(::game::Header, _impl_.server_time_ms_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::game::LoginRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::LoginRequest, _impl_.username_),
    PROTOBUF_FIELD_OFFSET(::game::LoginRequest, _impl_.password_),
    PROTOBUF_FIELD_OFFSET(::game::LoginResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::game::LoginResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::LoginResponse, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::game::LoginResponse, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::game::LoginResponse, _impl_.session_token_),
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::game::JoinRoomRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::JoinRoomRequest, _impl_.room_id_),
    PROTOBUF_FIELD_OFFSET(::game::JoinRoomResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::game::JoinRoomResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::JoinRoomResponse, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::game::JoinRoomResponse, _impl_.room_id_),
    PROTOBUF_FIELD_OFFSET(::game::JoinRoomResponse, _impl_.player_list_),
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::game::ChatSend, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::ChatSend, _impl_.message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::game::ChatEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::ChatEvent, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::game::ChatEvent, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::game::ChatEvent, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::game::ChatEvent, _impl_.server_time_ms_),
    PROTOBUF_FIELD_OFFSET(::game::MoveInput, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::game::MoveInput, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::MoveInput, _impl_.tick_),
    PROTOBUF_FIELD_OFFSET(::game::MoveInput, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::game::MoveInput, _impl_.position_),
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::game::MoveEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::game::MoveEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::MoveEvent, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::game::MoveEvent, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::game::MoveEvent, _impl_.velocity_),
    PROTOBUF_FIELD_OFFSET(::game::MoveEvent, _impl_.server_time_ms_),
    ~0u,
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::game::FireInput, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::game::FireInput, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::FireInput, _impl_.tick_),
    PROTOBUF_FIELD_OFFSET(::game::FireInput, _impl_.weapon_id_),
    PROTOBUF_FIELD_OFFSET(::game::FireInput, _impl_.origin_),
    PROTOBUF_FIELD_OFFSET(::game::FireInput, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::game::FireInput, _impl_.seed_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::game::FireEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::game::FireEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::FireEvent, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::game::FireEvent, _impl_.bullet_id_),
    PROTOBUF_FIELD_OFFSET(::game::FireEvent, _impl_.origin_),
    PROTOBUF_FIELD_OFFSET(::game::FireEvent, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::game::FireEvent, _impl_.server_time_ms_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::game::HitEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::HitEvent, _impl_.attacker_id_),
    PROTOBUF_FIELD_OFFSET(::game::HitEvent, _impl_.target_id_),
    PROTOBUF_FIELD_OFFSET(::game::HitEvent, _impl_.bullet_id_),
    PROTOBUF_FIELD_OFFSET(::game::HitEvent, _impl_.damage_),
    PROTOBUF_FIELD_OFFSET(::game::HitEvent, _impl_.target_hp_),
    PROTOBUF_FIELD_OFFSET(::game::HitEvent, _impl_.server_time_ms_),
    PROTOBUF_FIELD_OFFSET(::game::PlayerInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::game::PlayerInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::PlayerInfo, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::game::PlayerInfo, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::game::PlayerInfo, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::game::PlayerInfo, _impl_.hp_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::game::AllPlayerList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::AllPlayerList, _impl_.players_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::game::PlayerStateUpdate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::PlayerStateUpdate, _impl_.players_updated_),
    PROTOBUF_FIELD_OFFSET(::game::PlayerStateUpdate, _impl_.players_removed_),
    PROTOBUF_FIELD_OFFSET(::game::GameMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::game::GameMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::game::GameMessage, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::game::GameMessage, _impl_.header_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::game::GameMessage, _impl_.payload_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::game::Vector3)},
        {11, -1, -1, sizeof(::game::Result)},
        {21, -1, -1, sizeof(::game::Header)},
        {32, -1, -1, sizeof(::game::LoginRequest)},
        {42, 53, -1, sizeof(::game::LoginResponse)},
        {56, -1, -1, sizeof(::game::JoinRoomRequest)},
        {65, 76, -1, sizeof(::game::JoinRoomResponse)},
        {79, -1, -1, sizeof(::game::ChatSend)},
        {88, -1, -1, sizeof(::game::ChatEvent)},
        {100, 111, -1, sizeof(::game::MoveInput)},
        {114, 126, -1, sizeof(::game::MoveEvent)},
        {130, 143, -1, sizeof(::game::FireInput)},
        {148, 161, -1, sizeof(::game::FireEvent)},
        {166, -1, -1, sizeof(::game::HitEvent)},
        {180, 192, -1, sizeof(::game::PlayerInfo)},
        {196, -1, -1, sizeof(::game::AllPlayerList)},
        {205, -1, -1, sizeof(::game::PlayerStateUpdate)},
        {215, 238, -1, sizeof(::game::GameMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::game::_Vector3_default_instance_._instance,
    &::game::_Result_default_instance_._instance,
    &::game::_Header_default_instance_._instance,
    &::game::_LoginRequest_default_instance_._instance,
    &::game::_LoginResponse_default_instance_._instance,
    &::game::_JoinRoomRequest_default_instance_._instance,
    &::game::_JoinRoomResponse_default_instance_._instance,
    &::game::_ChatSend_default_instance_._instance,
    &::game::_ChatEvent_default_instance_._instance,
    &::game::_MoveInput_default_instance_._instance,
    &::game::_MoveEvent_default_instance_._instance,
    &::game::_FireInput_default_instance_._instance,
    &::game::_FireEvent_default_instance_._instance,
    &::game::_HitEvent_default_instance_._instance,
    &::game::_PlayerInfo_default_instance_._instance,
    &::game::_AllPlayerList_default_instance_._instance,
    &::game::_PlayerStateUpdate_default_instance_._instance,
    &::game::_GameMessage_default_instance_._instance,
};
const char descriptor_table_protodef_game_5fmessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\022game_message.proto\022\004game\"*\n\007Vector3\022\t\n"
    "\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"@\n\006Result"
    "\022%\n\013status_code\030\001 \001(\0162\020.game.StatusCode\022"
    "\017\n\007message\030\002 \001(\t\"E\n\006Header\022\021\n\tplayer_id\030"
    "\001 \001(\r\022\020\n\010sequence\030\002 \001(\004\022\026\n\016server_time_m"
    "s\030\003 \001(\004\"2\n\014LoginRequest\022\020\n\010username\030\001 \001("
    "\t\022\020\n\010password\030\002 \001(\t\"W\n\rLoginResponse\022\034\n\006"
    "result\030\001 \001(\0132\014.game.Result\022\021\n\tplayer_id\030"
    "\002 \001(\r\022\025\n\rsession_token\030\003 \001(\t\"\"\n\017JoinRoom"
    "Request\022\017\n\007room_id\030\001 \001(\r\"h\n\020JoinRoomResp"
    "onse\022\034\n\006result\030\001 \001(\0132\014.game.Result\022\017\n\007ro"
    "om_id\030\002 \001(\r\022%\n\013player_list\030\003 \003(\0132\020.game."
    "PlayerInfo\"\033\n\010ChatSend\022\017\n\007message\030\001 \001(\t\""
    "Y\n\tChatEvent\022\021\n\tplayer_id\030\001 \001(\r\022\020\n\010nickn"
    "ame\030\002 \001(\t\022\017\n\007message\030\003 \001(\t\022\026\n\016server_tim"
    "e_ms\030\004 \001(\004\"\\\n\tMoveInput\022\014\n\004tick\030\001 \001(\004\022 \n"
    "\tdirection\030\002 \001(\0132\r.game.Vector3\022\037\n\010posit"
    "ion\030\003 \001(\0132\r.game.Vector3\"x\n\tMoveEvent\022\021\n"
    "\tplayer_id\030\001 \001(\r\022\037\n\010position\030\002 \001(\0132\r.gam"
    "e.Vector3\022\037\n\010velocity\030\003 \001(\0132\r.game.Vecto"
    "r3\022\026\n\016server_time_ms\030\006 \001(\004\"{\n\tFireInput\022"
    "\014\n\004tick\030\001 \001(\004\022\021\n\tweapon_id\030\002 \001(\r\022\035\n\006orig"
    "in\030\003 \001(\0132\r.game.Vector3\022 \n\tdirection\030\004 \001"
    "(\0132\r.game.Vector3\022\014\n\004seed\030\005 \001(\r\"\212\001\n\tFire"
    "Event\022\021\n\tplayer_id\030\001 \001(\r\022\021\n\tbullet_id\030\002 "
    "\001(\r\022\035\n\006origin\030\003 \001(\0132\r.game.Vector3\022 \n\tdi"
    "rection\030\004 \001(\0132\r.game.Vector3\022\026\n\016server_t"
    "ime_ms\030\005 \001(\004\"\200\001\n\010HitEvent\022\023\n\013attacker_id"
    "\030\001 \001(\r\022\021\n\ttarget_id\030\002 \001(\r\022\021\n\tbullet_id\030\003"
    " \001(\r\022\016\n\006damage\030\004 \001(\r\022\021\n\ttarget_hp\030\005 \001(\r\022"
    "\026\n\016server_time_ms\030\006 \001(\004\"^\n\nPlayerInfo\022\021\n"
    "\tplayer_id\030\001 \001(\r\022\020\n\010nickname\030\002 \001(\t\022\037\n\010po"
    "sition\030\003 \001(\0132\r.game.Vector3\022\n\n\002hp\030\004 \001(\r\""
    "2\n\rAllPlayerList\022!\n\007players\030\001 \003(\0132\020.game"
    ".PlayerInfo\"W\n\021PlayerStateUpdate\022)\n\017play"
    "ers_updated\030\001 \003(\0132\020.game.PlayerInfo\022\027\n\017p"
    "layers_removed\030\002 \003(\r\"\361\004\n\013GameMessage\022\034\n\006"
    "header\030\001 \001(\0132\014.game.Header\022+\n\rlogin_requ"
    "est\030\n \001(\0132\022.game.LoginRequestH\000\022-\n\016login"
    "_response\030\013 \001(\0132\023.game.LoginResponseH\000\0222"
    "\n\021join_room_request\030\014 \001(\0132\025.game.JoinRoo"
    "mRequestH\000\0224\n\022join_room_response\030\r \001(\0132\026"
    ".game.JoinRoomResponseH\000\022#\n\tchat_send\030\024 "
    "\001(\0132\016.game.ChatSendH\000\022%\n\nchat_event\030\025 \001("
    "\0132\017.game.ChatEventH\000\022%\n\nmove_input\030\036 \001(\013"
    "2\017.game.MoveInputH\000\022%\n\nmove_event\030\037 \001(\0132"
    "\017.game.MoveEventH\000\022%\n\nfire_input\030  \001(\0132\017"
    ".game.FireInputH\000\022%\n\nfire_event\030! \001(\0132\017."
    "game.FireEventH\000\022#\n\thit_event\030\" \001(\0132\016.ga"
    "me.HitEventH\000\022.\n\017all_player_list\030( \001(\0132\023"
    ".game.AllPlayerListH\000\0226\n\023player_state_up"
    "date\030) \001(\0132\027.game.PlayerStateUpdateH\000B\t\n"
    "\007payload*\316\001\n\nStatusCode\022\013\n\007SUCCESS\020\000\022\020\n\013"
    "BAD_REQUEST\020\220\003\022\021\n\014UNAUTHORIZED\020\221\003\022\016\n\tFOR"
    "BIDDEN\020\223\003\022\016\n\tNOT_FOUND\020\224\003\022\032\n\025INTERNAL_SE"
    "RVER_ERROR\020\364\003\022\020\n\013BAD_GATEWAY\020\366\003\022\030\n\023SERVI"
    "CE_UNAVAILABLE\020\367\003\022\024\n\017GATEWAY_TIMEOUT\020\370\003\022"
    "\014\n\007TIMEOUT\020\370\003\032\002\020\001b\006proto3"
};
static ::absl::once_flag descriptor_table_game_5fmessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_game_5fmessage_2eproto = {
    false,
    false,
    2305,
    descriptor_table_protodef_game_5fmessage_2eproto,
    "game_message.proto",
    &descriptor_table_game_5fmessage_2eproto_once,
    nullptr,
    0,
    18,
    schemas,
    file_default_instances,
    TableStruct_game_5fmessage_2eproto::offsets,
    file_level_metadata_game_5fmessage_2eproto,
    file_level_enum_descriptors_game_5fmessage_2eproto,
    file_level_service_descriptors_game_5fmessage_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_game_5fmessage_2eproto_getter() {
  return &descriptor_table_game_5fmessage_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_game_5fmessage_2eproto(&descriptor_table_game_5fmessage_2eproto);
namespace game {
const ::google::protobuf::EnumDescriptor* StatusCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_game_5fmessage_2eproto);
  return file_level_enum_descriptors_game_5fmessage_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t StatusCode_internal_data_[] = {
    65536u, 524288u, 500u, 403u, 503u, 401u, 404u, 502u, 504u, 400u, };
bool StatusCode_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, StatusCode_internal_data_);
}
// ===================================================================

class Vector3::_Internal {
 public:
};

Vector3::Vector3(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.Vector3)
}
Vector3::Vector3(
    ::google::protobuf::Arena* arena, const Vector3& from)
    : Vector3(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vector3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vector3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vector3::~Vector3() {
  // @@protoc_insertion_point(destructor:game.Vector3)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vector3::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Vector3::Clear() {
// @@protoc_insertion_point(message_clear_start:game.Vector3)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Vector3::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Vector3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Vector3_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Vector3::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.Vector3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  // float z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.Vector3)
  return target;
}

::size_t Vector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.Vector3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  // float z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Vector3::_class_data_ = {
    Vector3::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Vector3::GetClassData() const {
  return &_class_data_;
}

void Vector3::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Vector3*>(&to_msg);
  auto& from = static_cast<const Vector3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.Vector3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector3::CopyFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Vector3::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Vector3::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Vector3::InternalSwap(Vector3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_)
      + sizeof(Vector3::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vector3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[0]);
}
// ===================================================================

class Result::_Internal {
 public:
};

Result::Result(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.Result)
}
inline PROTOBUF_NDEBUG_INLINE Result::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

Result::Result(
    ::google::protobuf::Arena* arena,
    const Result& from)
    : ::google::protobuf::Message(arena) {
  Result* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.status_code_ = from._impl_.status_code_;

  // @@protoc_insertion_point(copy_constructor:game.Result)
}
inline PROTOBUF_NDEBUG_INLINE Result::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void Result::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_code_ = {};
}
Result::~Result() {
  // @@protoc_insertion_point(destructor:game.Result)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Result::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:game.Result)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.status_code_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Result::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 27, 2> Result::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Result_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Result, _impl_.message_)}},
    // .game.StatusCode status_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Result, _impl_.status_code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Result, _impl_.status_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .game.StatusCode status_code = 1;
    {PROTOBUF_FIELD_OFFSET(Result, _impl_.status_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(Result, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\13\0\7\0\0\0\0\0"
    "game.Result"
    "message"
  }},
};

::uint8_t* Result::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.Result)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .game.StatusCode status_code = 1;
  if (this->_internal_status_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status_code(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "game.Result.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.Result)
  return target;
}

::size_t Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.Result)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // .game.StatusCode status_code = 1;
  if (this->_internal_status_code() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Result::_class_data_ = {
    Result::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Result::GetClassData() const {
  return &_class_data_;
}

void Result::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Result*>(&to_msg);
  auto& from = static_cast<const Result&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.Result)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status_code() != 0) {
    _this->_internal_set_status_code(from._internal_status_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Result::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Result::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Result::InternalSwap(Result* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.status_code_, other->_impl_.status_code_);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[1]);
}
// ===================================================================

class Header::_Internal {
 public:
};

Header::Header(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.Header)
}
Header::Header(
    ::google::protobuf::Arena* arena, const Header& from)
    : Header(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Header::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Header::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sequence_),
           0,
           offsetof(Impl_, player_id_) -
               offsetof(Impl_, sequence_) +
               sizeof(Impl_::player_id_));
}
Header::~Header() {
  // @@protoc_insertion_point(destructor:game.Header)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Header::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:game.Header)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.sequence_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.player_id_) -
      reinterpret_cast<char*>(&_impl_.sequence_)) + sizeof(_impl_.player_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Header::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Header::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Header_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Header, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Header, _impl_.player_id_)}},
    // uint64 sequence = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Header, _impl_.sequence_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Header, _impl_.sequence_)}},
    // uint64 server_time_ms = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Header, _impl_.server_time_ms_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Header, _impl_.server_time_ms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(Header, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 sequence = 2;
    {PROTOBUF_FIELD_OFFSET(Header, _impl_.sequence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 server_time_ms = 3;
    {PROTOBUF_FIELD_OFFSET(Header, _impl_.server_time_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Header::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.Header)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  // uint64 sequence = 2;
  if (this->_internal_sequence() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_sequence(), target);
  }

  // uint64 server_time_ms = 3;
  if (this->_internal_server_time_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_server_time_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.Header)
  return target;
}

::size_t Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.Header)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 sequence = 2;
  if (this->_internal_sequence() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_sequence());
  }

  // uint64 server_time_ms = 3;
  if (this->_internal_server_time_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_server_time_ms());
  }

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Header::_class_data_ = {
    Header::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Header::GetClassData() const {
  return &_class_data_;
}

void Header::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Header*>(&to_msg);
  auto& from = static_cast<const Header&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.Header)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sequence() != 0) {
    _this->_internal_set_sequence(from._internal_sequence());
  }
  if (from._internal_server_time_ms() != 0) {
    _this->_internal_set_server_time_ms(from._internal_server_time_ms());
  }
  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Header::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Header::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Header::InternalSwap(Header* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Header, _impl_.player_id_)
      + sizeof(Header::_impl_.player_id_)
      - PROTOBUF_FIELD_OFFSET(Header, _impl_.sequence_)>(
          reinterpret_cast<char*>(&_impl_.sequence_),
          reinterpret_cast<char*>(&other->_impl_.sequence_));
}

::google::protobuf::Metadata Header::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[2]);
}
// ===================================================================

class LoginRequest::_Internal {
 public:
};

LoginRequest::LoginRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.LoginRequest)
}
inline PROTOBUF_NDEBUG_INLINE LoginRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : username_(arena, from.username_),
        password_(arena, from.password_),
        _cached_size_{0} {}

LoginRequest::LoginRequest(
    ::google::protobuf::Arena* arena,
    const LoginRequest& from)
    : ::google::protobuf::Message(arena) {
  LoginRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:game.LoginRequest)
}
inline PROTOBUF_NDEBUG_INLINE LoginRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        password_(arena),
        _cached_size_{0} {}

inline void LoginRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:game.LoginRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoginRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:game.LoginRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LoginRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2> LoginRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LoginRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.password_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\10\10\0\0\0\0\0"
    "game.LoginRequest"
    "username"
    "password"
  }},
};

::uint8_t* LoginRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.LoginRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "game.LoginRequest.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "game.LoginRequest.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.LoginRequest)
  return target;
}

::size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.LoginRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LoginRequest::_class_data_ = {
    LoginRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LoginRequest::GetClassData() const {
  return &_class_data_;
}

void LoginRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LoginRequest*>(&to_msg);
  auto& from = static_cast<const LoginRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.LoginRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LoginRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LoginRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LoginRequest::InternalSwap(LoginRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[3]);
}
// ===================================================================

class LoginResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<LoginResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_._has_bits_);
  static const ::game::Result& result(const LoginResponse* msg);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::game::Result& LoginResponse::_Internal::result(const LoginResponse* msg) {
  return *msg->_impl_.result_;
}
LoginResponse::LoginResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.LoginResponse)
}
inline PROTOBUF_NDEBUG_INLINE LoginResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        session_token_(arena, from.session_token_) {}

LoginResponse::LoginResponse(
    ::google::protobuf::Arena* arena,
    const LoginResponse& from)
    : ::google::protobuf::Message(arena) {
  LoginResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::game::Result>(arena, *from._impl_.result_)
                : nullptr;
  _impl_.player_id_ = from._impl_.player_id_;

  // @@protoc_insertion_point(copy_constructor:game.LoginResponse)
}
inline PROTOBUF_NDEBUG_INLINE LoginResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        session_token_(arena) {}

inline void LoginResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, player_id_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::player_id_));
}
LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:game.LoginResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoginResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.session_token_.Destroy();
  delete _impl_.result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:game.LoginResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_token_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.result_ != nullptr);
    _impl_.result_->Clear();
  }
  _impl_.player_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LoginResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 40, 2> LoginResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LoginResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .game.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.result_)}},
    // uint32 player_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LoginResponse, _impl_.player_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.player_id_)}},
    // string session_token = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.session_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .game.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 player_id = 2;
    {PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.player_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string session_token = 3;
    {PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.session_token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::game::Result>()},
  }}, {{
    "\22\0\0\15\0\0\0\0"
    "game.LoginResponse"
    "session_token"
  }},
};

::uint8_t* LoginResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.LoginResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .game.Result result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  // uint32 player_id = 2;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_player_id(), target);
  }

  // string session_token = 3;
  if (!this->_internal_session_token().empty()) {
    const std::string& _s = this->_internal_session_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "game.LoginResponse.session_token");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.LoginResponse)
  return target;
}

::size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.LoginResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string session_token = 3;
  if (!this->_internal_session_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_session_token());
  }

  // .game.Result result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.result_);
  }

  // uint32 player_id = 2;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LoginResponse::_class_data_ = {
    LoginResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LoginResponse::GetClassData() const {
  return &_class_data_;
}

void LoginResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LoginResponse*>(&to_msg);
  auto& from = static_cast<const LoginResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.LoginResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_token().empty()) {
    _this->_internal_set_session_token(from._internal_session_token());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_result()->::game::Result::MergeFrom(
        from._internal_result());
  }
  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LoginResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LoginResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LoginResponse::InternalSwap(LoginResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_token_, &other->_impl_.session_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.player_id_)
      + sizeof(LoginResponse::_impl_.player_id_)
      - PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[4]);
}
// ===================================================================

class JoinRoomRequest::_Internal {
 public:
};

JoinRoomRequest::JoinRoomRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.JoinRoomRequest)
}
JoinRoomRequest::JoinRoomRequest(
    ::google::protobuf::Arena* arena, const JoinRoomRequest& from)
    : JoinRoomRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE JoinRoomRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void JoinRoomRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.room_id_ = {};
}
JoinRoomRequest::~JoinRoomRequest() {
  // @@protoc_insertion_point(destructor:game.JoinRoomRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JoinRoomRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JoinRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:game.JoinRoomRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.room_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JoinRoomRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> JoinRoomRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_JoinRoomRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 room_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JoinRoomRequest, _impl_.room_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.room_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 room_id = 1;
    {PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.room_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* JoinRoomRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.JoinRoomRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_room_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.JoinRoomRequest)
  return target;
}

::size_t JoinRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.JoinRoomRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_room_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JoinRoomRequest::_class_data_ = {
    JoinRoomRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JoinRoomRequest::GetClassData() const {
  return &_class_data_;
}

void JoinRoomRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JoinRoomRequest*>(&to_msg);
  auto& from = static_cast<const JoinRoomRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.JoinRoomRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JoinRoomRequest::CopyFrom(const JoinRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.JoinRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JoinRoomRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JoinRoomRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JoinRoomRequest::InternalSwap(JoinRoomRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.room_id_, other->_impl_.room_id_);
}

::google::protobuf::Metadata JoinRoomRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[5]);
}
// ===================================================================

class JoinRoomResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<JoinRoomResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_._has_bits_);
  static const ::game::Result& result(const JoinRoomResponse* msg);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::game::Result& JoinRoomResponse::_Internal::result(const JoinRoomResponse* msg) {
  return *msg->_impl_.result_;
}
JoinRoomResponse::JoinRoomResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.JoinRoomResponse)
}
inline PROTOBUF_NDEBUG_INLINE JoinRoomResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        player_list_{visibility, arena, from.player_list_} {}

JoinRoomResponse::JoinRoomResponse(
    ::google::protobuf::Arena* arena,
    const JoinRoomResponse& from)
    : ::google::protobuf::Message(arena) {
  JoinRoomResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::game::Result>(arena, *from._impl_.result_)
                : nullptr;
  _impl_.room_id_ = from._impl_.room_id_;

  // @@protoc_insertion_point(copy_constructor:game.JoinRoomResponse)
}
inline PROTOBUF_NDEBUG_INLINE JoinRoomResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        player_list_{visibility, arena} {}

inline void JoinRoomResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, room_id_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::room_id_));
}
JoinRoomResponse::~JoinRoomResponse() {
  // @@protoc_insertion_point(destructor:game.JoinRoomResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JoinRoomResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JoinRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:game.JoinRoomResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_list_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.result_ != nullptr);
    _impl_.result_->Clear();
  }
  _impl_.room_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JoinRoomResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> JoinRoomResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_JoinRoomResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .game.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.result_)}},
    // uint32 room_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JoinRoomResponse, _impl_.room_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.room_id_)}},
    // repeated .game.PlayerInfo player_list = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.player_list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .game.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 room_id = 2;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.room_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .game.PlayerInfo player_list = 3;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.player_list_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::game::Result>()},
    {::_pbi::TcParser::GetTable<::game::PlayerInfo>()},
  }}, {{
  }},
};

::uint8_t* JoinRoomResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.JoinRoomResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .game.Result result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  // uint32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_room_id(), target);
  }

  // repeated .game.PlayerInfo player_list = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_player_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_player_list().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.JoinRoomResponse)
  return target;
}

::size_t JoinRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.JoinRoomResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .game.PlayerInfo player_list = 3;
  total_size += 1UL * this->_internal_player_list_size();
  for (const auto& msg : this->_internal_player_list()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .game.Result result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.result_);
  }

  // uint32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_room_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JoinRoomResponse::_class_data_ = {
    JoinRoomResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JoinRoomResponse::GetClassData() const {
  return &_class_data_;
}

void JoinRoomResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JoinRoomResponse*>(&to_msg);
  auto& from = static_cast<const JoinRoomResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.JoinRoomResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_player_list()->MergeFrom(
      from._internal_player_list());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_result()->::game::Result::MergeFrom(
        from._internal_result());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JoinRoomResponse::CopyFrom(const JoinRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.JoinRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JoinRoomResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JoinRoomResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JoinRoomResponse::InternalSwap(JoinRoomResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.player_list_.InternalSwap(&other->_impl_.player_list_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.room_id_)
      + sizeof(JoinRoomResponse::_impl_.room_id_)
      - PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata JoinRoomResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[6]);
}
// ===================================================================

class ChatSend::_Internal {
 public:
};

ChatSend::ChatSend(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.ChatSend)
}
inline PROTOBUF_NDEBUG_INLINE ChatSend::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

ChatSend::ChatSend(
    ::google::protobuf::Arena* arena,
    const ChatSend& from)
    : ::google::protobuf::Message(arena) {
  ChatSend* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:game.ChatSend)
}
inline PROTOBUF_NDEBUG_INLINE ChatSend::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void ChatSend::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ChatSend::~ChatSend() {
  // @@protoc_insertion_point(destructor:game.ChatSend)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChatSend::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChatSend::Clear() {
// @@protoc_insertion_point(message_clear_start:game.ChatSend)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChatSend::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 29, 2> ChatSend::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ChatSend_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ChatSend, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1;
    {PROTOBUF_FIELD_OFFSET(ChatSend, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\7\0\0\0\0\0\0"
    "game.ChatSend"
    "message"
  }},
};

::uint8_t* ChatSend::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.ChatSend)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "game.ChatSend.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.ChatSend)
  return target;
}

::size_t ChatSend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.ChatSend)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChatSend::_class_data_ = {
    ChatSend::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChatSend::GetClassData() const {
  return &_class_data_;
}

void ChatSend::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChatSend*>(&to_msg);
  auto& from = static_cast<const ChatSend&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.ChatSend)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChatSend::CopyFrom(const ChatSend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.ChatSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChatSend::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ChatSend::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChatSend::InternalSwap(ChatSend* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata ChatSend::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[7]);
}
// ===================================================================

class ChatEvent::_Internal {
 public:
};

ChatEvent::ChatEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.ChatEvent)
}
inline PROTOBUF_NDEBUG_INLINE ChatEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : nickname_(arena, from.nickname_),
        message_(arena, from.message_),
        _cached_size_{0} {}

ChatEvent::ChatEvent(
    ::google::protobuf::Arena* arena,
    const ChatEvent& from)
    : ::google::protobuf::Message(arena) {
  ChatEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, server_time_ms_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, server_time_ms_),
           offsetof(Impl_, player_id_) -
               offsetof(Impl_, server_time_ms_) +
               sizeof(Impl_::player_id_));

  // @@protoc_insertion_point(copy_constructor:game.ChatEvent)
}
inline PROTOBUF_NDEBUG_INLINE ChatEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nickname_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void ChatEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, server_time_ms_),
           0,
           offsetof(Impl_, player_id_) -
               offsetof(Impl_, server_time_ms_) +
               sizeof(Impl_::player_id_));
}
ChatEvent::~ChatEvent() {
  // @@protoc_insertion_point(destructor:game.ChatEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChatEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChatEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:game.ChatEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.server_time_ms_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.player_id_) -
      reinterpret_cast<char*>(&_impl_.server_time_ms_)) + sizeof(_impl_.player_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChatEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 38, 2> ChatEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ChatEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 server_time_ms = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ChatEvent, _impl_.server_time_ms_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ChatEvent, _impl_.server_time_ms_)}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChatEvent, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ChatEvent, _impl_.player_id_)}},
    // string nickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ChatEvent, _impl_.nickname_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ChatEvent, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(ChatEvent, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string nickname = 2;
    {PROTOBUF_FIELD_OFFSET(ChatEvent, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(ChatEvent, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 server_time_ms = 4;
    {PROTOBUF_FIELD_OFFSET(ChatEvent, _impl_.server_time_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\16\0\10\7\0\0\0\0"
    "game.ChatEvent"
    "nickname"
    "message"
  }},
};

::uint8_t* ChatEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.ChatEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "game.ChatEvent.nickname");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "game.ChatEvent.message");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint64 server_time_ms = 4;
  if (this->_internal_server_time_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_server_time_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.ChatEvent)
  return target;
}

::size_t ChatEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.ChatEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nickname());
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // uint64 server_time_ms = 4;
  if (this->_internal_server_time_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_server_time_ms());
  }

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChatEvent::_class_data_ = {
    ChatEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChatEvent::GetClassData() const {
  return &_class_data_;
}

void ChatEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChatEvent*>(&to_msg);
  auto& from = static_cast<const ChatEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.ChatEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_server_time_ms() != 0) {
    _this->_internal_set_server_time_ms(from._internal_server_time_ms());
  }
  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChatEvent::CopyFrom(const ChatEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.ChatEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChatEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ChatEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChatEvent::InternalSwap(ChatEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChatEvent, _impl_.player_id_)
      + sizeof(ChatEvent::_impl_.player_id_)
      - PROTOBUF_FIELD_OFFSET(ChatEvent, _impl_.server_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.server_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.server_time_ms_));
}

::google::protobuf::Metadata ChatEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[8]);
}
// ===================================================================

class MoveInput::_Internal {
 public:
  using HasBits = decltype(std::declval<MoveInput>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MoveInput, _impl_._has_bits_);
  static const ::game::Vector3& direction(const MoveInput* msg);
  static void set_has_direction(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::game::Vector3& position(const MoveInput* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::game::Vector3& MoveInput::_Internal::direction(const MoveInput* msg) {
  return *msg->_impl_.direction_;
}
const ::game::Vector3& MoveInput::_Internal::position(const MoveInput* msg) {
  return *msg->_impl_.position_;
}
MoveInput::MoveInput(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.MoveInput)
}
inline PROTOBUF_NDEBUG_INLINE MoveInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MoveInput::MoveInput(
    ::google::protobuf::Arena* arena,
    const MoveInput& from)
    : ::google::protobuf::Message(arena) {
  MoveInput* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.direction_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::game::Vector3>(arena, *from._impl_.direction_)
                : nullptr;
  _impl_.position_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::game::Vector3>(arena, *from._impl_.position_)
                : nullptr;
  _impl_.tick_ = from._impl_.tick_;

  // @@protoc_insertion_point(copy_constructor:game.MoveInput)
}
inline PROTOBUF_NDEBUG_INLINE MoveInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MoveInput::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, direction_),
           0,
           offsetof(Impl_, tick_) -
               offsetof(Impl_, direction_) +
               sizeof(Impl_::tick_));
}
MoveInput::~MoveInput() {
  // @@protoc_insertion_point(destructor:game.MoveInput)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MoveInput::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.direction_;
  delete _impl_.position_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MoveInput::Clear() {
// @@protoc_insertion_point(message_clear_start:game.MoveInput)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.direction_ != nullptr);
      _impl_.direction_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
  }
  _impl_.tick_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MoveInput::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> MoveInput::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MoveInput, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MoveInput_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 tick = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MoveInput, _impl_.tick_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MoveInput, _impl_.tick_)}},
    // .game.Vector3 direction = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(MoveInput, _impl_.direction_)}},
    // .game.Vector3 position = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(MoveInput, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 tick = 1;
    {PROTOBUF_FIELD_OFFSET(MoveInput, _impl_.tick_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .game.Vector3 direction = 2;
    {PROTOBUF_FIELD_OFFSET(MoveInput, _impl_.direction_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.Vector3 position = 3;
    {PROTOBUF_FIELD_OFFSET(MoveInput, _impl_.position_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::game::Vector3>()},
    {::_pbi::TcParser::GetTable<::game::Vector3>()},
  }}, {{
  }},
};

::uint8_t* MoveInput::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.MoveInput)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 tick = 1;
  if (this->_internal_tick() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_tick(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .game.Vector3 direction = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::direction(this),
        _Internal::direction(this).GetCachedSize(), target, stream);
  }

  // .game.Vector3 position = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.MoveInput)
  return target;
}

::size_t MoveInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.MoveInput)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .game.Vector3 direction = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.direction_);
    }

    // .game.Vector3 position = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

  }
  // uint64 tick = 1;
  if (this->_internal_tick() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_tick());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MoveInput::_class_data_ = {
    MoveInput::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MoveInput::GetClassData() const {
  return &_class_data_;
}

void MoveInput::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MoveInput*>(&to_msg);
  auto& from = static_cast<const MoveInput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.MoveInput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_direction()->::game::Vector3::MergeFrom(
          from._internal_direction());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_position()->::game::Vector3::MergeFrom(
          from._internal_position());
    }
  }
  if (from._internal_tick() != 0) {
    _this->_internal_set_tick(from._internal_tick());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MoveInput::CopyFrom(const MoveInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.MoveInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MoveInput::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MoveInput::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MoveInput::InternalSwap(MoveInput* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MoveInput, _impl_.tick_)
      + sizeof(MoveInput::_impl_.tick_)
      - PROTOBUF_FIELD_OFFSET(MoveInput, _impl_.direction_)>(
          reinterpret_cast<char*>(&_impl_.direction_),
          reinterpret_cast<char*>(&other->_impl_.direction_));
}

::google::protobuf::Metadata MoveInput::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[9]);
}
// ===================================================================

class MoveEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<MoveEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_._has_bits_);
  static const ::game::Vector3& position(const MoveEvent* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::game::Vector3& velocity(const MoveEvent* msg);
  static void set_has_velocity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::game::Vector3& MoveEvent::_Internal::position(const MoveEvent* msg) {
  return *msg->_impl_.position_;
}
const ::game::Vector3& MoveEvent::_Internal::velocity(const MoveEvent* msg) {
  return *msg->_impl_.velocity_;
}
MoveEvent::MoveEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.MoveEvent)
}
inline PROTOBUF_NDEBUG_INLINE MoveEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MoveEvent::MoveEvent(
    ::google::protobuf::Arena* arena,
    const MoveEvent& from)
    : ::google::protobuf::Message(arena) {
  MoveEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::game::Vector3>(arena, *from._impl_.position_)
                : nullptr;
  _impl_.velocity_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::game::Vector3>(arena, *from._impl_.velocity_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, server_time_ms_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, server_time_ms_),
           offsetof(Impl_, player_id_) -
               offsetof(Impl_, server_time_ms_) +
               sizeof(Impl_::player_id_));

  // @@protoc_insertion_point(copy_constructor:game.MoveEvent)
}
inline PROTOBUF_NDEBUG_INLINE MoveEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MoveEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, player_id_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::player_id_));
}
MoveEvent::~MoveEvent() {
  // @@protoc_insertion_point(destructor:game.MoveEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MoveEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_;
  delete _impl_.velocity_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MoveEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:game.MoveEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.velocity_ != nullptr);
      _impl_.velocity_->Clear();
    }
  }
  ::memset(&_impl_.server_time_ms_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.player_id_) -
      reinterpret_cast<char*>(&_impl_.server_time_ms_)) + sizeof(_impl_.player_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MoveEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 2, 0, 2> MoveEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967256,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MoveEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MoveEvent, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_.player_id_)}},
    // .game.Vector3 position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_.position_)}},
    // .game.Vector3 velocity = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_.velocity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 server_time_ms = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MoveEvent, _impl_.server_time_ms_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_.server_time_ms_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_.player_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .game.Vector3 position = 2;
    {PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.Vector3 velocity = 3;
    {PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_.velocity_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 server_time_ms = 6;
    {PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_.server_time_ms_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::game::Vector3>()},
    {::_pbi::TcParser::GetTable<::game::Vector3>()},
  }}, {{
  }},
};

::uint8_t* MoveEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.MoveEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .game.Vector3 position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // .game.Vector3 velocity = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::velocity(this),
        _Internal::velocity(this).GetCachedSize(), target, stream);
  }

  // uint64 server_time_ms = 6;
  if (this->_internal_server_time_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_server_time_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.MoveEvent)
  return target;
}

::size_t MoveEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.MoveEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .game.Vector3 position = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

    // .game.Vector3 velocity = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.velocity_);
    }

  }
  // uint64 server_time_ms = 6;
  if (this->_internal_server_time_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_server_time_ms());
  }

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MoveEvent::_class_data_ = {
    MoveEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MoveEvent::GetClassData() const {
  return &_class_data_;
}

void MoveEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MoveEvent*>(&to_msg);
  auto& from = static_cast<const MoveEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.MoveEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_position()->::game::Vector3::MergeFrom(
          from._internal_position());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_velocity()->::game::Vector3::MergeFrom(
          from._internal_velocity());
    }
  }
  if (from._internal_server_time_ms() != 0) {
    _this->_internal_set_server_time_ms(from._internal_server_time_ms());
  }
  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MoveEvent::CopyFrom(const MoveEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.MoveEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MoveEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MoveEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MoveEvent::InternalSwap(MoveEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_.player_id_)
      + sizeof(MoveEvent::_impl_.player_id_)
      - PROTOBUF_FIELD_OFFSET(MoveEvent, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata MoveEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[10]);
}
// ===================================================================

class FireInput::_Internal {
 public:
  using HasBits = decltype(std::declval<FireInput>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FireInput, _impl_._has_bits_);
  static const ::game::Vector3& origin(const FireInput* msg);
  static void set_has_origin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::game::Vector3& direction(const FireInput* msg);
  static void set_has_direction(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::game::Vector3& FireInput::_Internal::origin(const FireInput* msg) {
  return *msg->_impl_.origin_;
}
const ::game::Vector3& FireInput::_Internal::direction(const FireInput* msg) {
  return *msg->_impl_.direction_;
}
FireInput::FireInput(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.FireInput)
}
inline PROTOBUF_NDEBUG_INLINE FireInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FireInput::FireInput(
    ::google::protobuf::Arena* arena,
    const FireInput& from)
    : ::google::protobuf::Message(arena) {
  FireInput* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::game::Vector3>(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.direction_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::game::Vector3>(arena, *from._impl_.direction_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tick_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tick_),
           offsetof(Impl_, seed_) -
               offsetof(Impl_, tick_) +
               sizeof(Impl_::seed_));

  // @@protoc_insertion_point(copy_constructor:game.FireInput)
}
inline PROTOBUF_NDEBUG_INLINE FireInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FireInput::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, seed_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::seed_));
}
FireInput::~FireInput() {
  // @@protoc_insertion_point(destructor:game.FireInput)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FireInput::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.origin_;
  delete _impl_.direction_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FireInput::Clear() {
// @@protoc_insertion_point(message_clear_start:game.FireInput)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.direction_ != nullptr);
      _impl_.direction_->Clear();
    }
  }
  ::memset(&_impl_.tick_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.seed_) -
      reinterpret_cast<char*>(&_impl_.tick_)) + sizeof(_impl_.seed_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FireInput::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> FireInput::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FireInput, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FireInput_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 tick = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FireInput, _impl_.tick_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FireInput, _impl_.tick_)}},
    // uint32 weapon_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FireInput, _impl_.weapon_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FireInput, _impl_.weapon_id_)}},
    // .game.Vector3 origin = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(FireInput, _impl_.origin_)}},
    // .game.Vector3 direction = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(FireInput, _impl_.direction_)}},
    // uint32 seed = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FireInput, _impl_.seed_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(FireInput, _impl_.seed_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 tick = 1;
    {PROTOBUF_FIELD_OFFSET(FireInput, _impl_.tick_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 weapon_id = 2;
    {PROTOBUF_FIELD_OFFSET(FireInput, _impl_.weapon_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .game.Vector3 origin = 3;
    {PROTOBUF_FIELD_OFFSET(FireInput, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.Vector3 direction = 4;
    {PROTOBUF_FIELD_OFFSET(FireInput, _impl_.direction_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 seed = 5;
    {PROTOBUF_FIELD_OFFSET(FireInput, _impl_.seed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::game::Vector3>()},
    {::_pbi::TcParser::GetTable<::game::Vector3>()},
  }}, {{
  }},
};

::uint8_t* FireInput::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.FireInput)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 tick = 1;
  if (this->_internal_tick() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_tick(), target);
  }

  // uint32 weapon_id = 2;
  if (this->_internal_weapon_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_weapon_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .game.Vector3 origin = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::origin(this),
        _Internal::origin(this).GetCachedSize(), target, stream);
  }

  // .game.Vector3 direction = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::direction(this),
        _Internal::direction(this).GetCachedSize(), target, stream);
  }

  // uint32 seed = 5;
  if (this->_internal_seed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_seed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.FireInput)
  return target;
}

::size_t FireInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.FireInput)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .game.Vector3 origin = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.origin_);
    }

    // .game.Vector3 direction = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.direction_);
    }

  }
  // uint64 tick = 1;
  if (this->_internal_tick() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_tick());
  }

  // uint32 weapon_id = 2;
  if (this->_internal_weapon_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_weapon_id());
  }

  // uint32 seed = 5;
  if (this->_internal_seed() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_seed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FireInput::_class_data_ = {
    FireInput::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FireInput::GetClassData() const {
  return &_class_data_;
}

void FireInput::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FireInput*>(&to_msg);
  auto& from = static_cast<const FireInput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.FireInput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_origin()->::game::Vector3::MergeFrom(
          from._internal_origin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_direction()->::game::Vector3::MergeFrom(
          from._internal_direction());
    }
  }
  if (from._internal_tick() != 0) {
    _this->_internal_set_tick(from._internal_tick());
  }
  if (from._internal_weapon_id() != 0) {
    _this->_internal_set_weapon_id(from._internal_weapon_id());
  }
  if (from._internal_seed() != 0) {
    _this->_internal_set_seed(from._internal_seed());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FireInput::CopyFrom(const FireInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.FireInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FireInput::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FireInput::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FireInput::InternalSwap(FireInput* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FireInput, _impl_.seed_)
      + sizeof(FireInput::_impl_.seed_)
      - PROTOBUF_FIELD_OFFSET(FireInput, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata FireInput::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[11]);
}
// ===================================================================

class FireEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<FireEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FireEvent, _impl_._has_bits_);
  static const ::game::Vector3& origin(const FireEvent* msg);
  static void set_has_origin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::game::Vector3& direction(const FireEvent* msg);
  static void set_has_direction(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::game::Vector3& FireEvent::_Internal::origin(const FireEvent* msg) {
  return *msg->_impl_.origin_;
}
const ::game::Vector3& FireEvent::_Internal::direction(const FireEvent* msg) {
  return *msg->_impl_.direction_;
}
FireEvent::FireEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.FireEvent)
}
inline PROTOBUF_NDEBUG_INLINE FireEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FireEvent::FireEvent(
    ::google::protobuf::Arena* arena,
    const FireEvent& from)
    : ::google::protobuf::Message(arena) {
  FireEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::game::Vector3>(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.direction_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::game::Vector3>(arena, *from._impl_.direction_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, player_id_),
           offsetof(Impl_, server_time_ms_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::server_time_ms_));

  // @@protoc_insertion_point(copy_constructor:game.FireEvent)
}
inline PROTOBUF_NDEBUG_INLINE FireEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FireEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, server_time_ms_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::server_time_ms_));
}
FireEvent::~FireEvent() {
  // @@protoc_insertion_point(destructor:game.FireEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FireEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.origin_;
  delete _impl_.direction_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FireEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:game.FireEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.direction_ != nullptr);
      _impl_.direction_->Clear();
    }
  }
  ::memset(&_impl_.player_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.server_time_ms_) -
      reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.server_time_ms_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FireEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> FireEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FireEvent, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FireEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FireEvent, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.player_id_)}},
    // uint32 bullet_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FireEvent, _impl_.bullet_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.bullet_id_)}},
    // .game.Vector3 origin = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.origin_)}},
    // .game.Vector3 direction = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.direction_)}},
    // uint64 server_time_ms = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FireEvent, _impl_.server_time_ms_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.server_time_ms_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.player_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 bullet_id = 2;
    {PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.bullet_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .game.Vector3 origin = 3;
    {PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.Vector3 direction = 4;
    {PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.direction_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 server_time_ms = 5;
    {PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.server_time_ms_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::game::Vector3>()},
    {::_pbi::TcParser::GetTable<::game::Vector3>()},
  }}, {{
  }},
};

::uint8_t* FireEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.FireEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  // uint32 bullet_id = 2;
  if (this->_internal_bullet_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_bullet_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .game.Vector3 origin = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::origin(this),
        _Internal::origin(this).GetCachedSize(), target, stream);
  }

  // .game.Vector3 direction = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::direction(this),
        _Internal::direction(this).GetCachedSize(), target, stream);
  }

  // uint64 server_time_ms = 5;
  if (this->_internal_server_time_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_server_time_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.FireEvent)
  return target;
}

::size_t FireEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.FireEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .game.Vector3 origin = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.origin_);
    }

    // .game.Vector3 direction = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.direction_);
    }

  }
  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  // uint32 bullet_id = 2;
  if (this->_internal_bullet_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_bullet_id());
  }

  // uint64 server_time_ms = 5;
  if (this->_internal_server_time_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_server_time_ms());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FireEvent::_class_data_ = {
    FireEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FireEvent::GetClassData() const {
  return &_class_data_;
}

void FireEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FireEvent*>(&to_msg);
  auto& from = static_cast<const FireEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.FireEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_origin()->::game::Vector3::MergeFrom(
          from._internal_origin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_direction()->::game::Vector3::MergeFrom(
          from._internal_direction());
    }
  }
  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  if (from._internal_bullet_id() != 0) {
    _this->_internal_set_bullet_id(from._internal_bullet_id());
  }
  if (from._internal_server_time_ms() != 0) {
    _this->_internal_set_server_time_ms(from._internal_server_time_ms());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FireEvent::CopyFrom(const FireEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.FireEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FireEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FireEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FireEvent::InternalSwap(FireEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.server_time_ms_)
      + sizeof(FireEvent::_impl_.server_time_ms_)
      - PROTOBUF_FIELD_OFFSET(FireEvent, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata FireEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[12]);
}
// ===================================================================

class HitEvent::_Internal {
 public:
};

HitEvent::HitEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.HitEvent)
}
HitEvent::HitEvent(
    ::google::protobuf::Arena* arena, const HitEvent& from)
    : HitEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE HitEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HitEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attacker_id_),
           0,
           offsetof(Impl_, target_hp_) -
               offsetof(Impl_, attacker_id_) +
               sizeof(Impl_::target_hp_));
}
HitEvent::~HitEvent() {
  // @@protoc_insertion_point(destructor:game.HitEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HitEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void HitEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:game.HitEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.attacker_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.target_hp_) -
      reinterpret_cast<char*>(&_impl_.attacker_id_)) + sizeof(_impl_.target_hp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HitEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> HitEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HitEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 attacker_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HitEvent, _impl_.attacker_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.attacker_id_)}},
    // uint32 target_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HitEvent, _impl_.target_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.target_id_)}},
    // uint32 bullet_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HitEvent, _impl_.bullet_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.bullet_id_)}},
    // uint32 damage = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HitEvent, _impl_.damage_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.damage_)}},
    // uint32 target_hp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HitEvent, _impl_.target_hp_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.target_hp_)}},
    // uint64 server_time_ms = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HitEvent, _impl_.server_time_ms_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.server_time_ms_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 attacker_id = 1;
    {PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.attacker_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 target_id = 2;
    {PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.target_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 bullet_id = 3;
    {PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.bullet_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 damage = 4;
    {PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.damage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 target_hp = 5;
    {PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.target_hp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 server_time_ms = 6;
    {PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.server_time_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* HitEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.HitEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 attacker_id = 1;
  if (this->_internal_attacker_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_attacker_id(), target);
  }

  // uint32 target_id = 2;
  if (this->_internal_target_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_target_id(), target);
  }

  // uint32 bullet_id = 3;
  if (this->_internal_bullet_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_bullet_id(), target);
  }

  // uint32 damage = 4;
  if (this->_internal_damage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_damage(), target);
  }

  // uint32 target_hp = 5;
  if (this->_internal_target_hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_target_hp(), target);
  }

  // uint64 server_time_ms = 6;
  if (this->_internal_server_time_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_server_time_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.HitEvent)
  return target;
}

::size_t HitEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.HitEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 attacker_id = 1;
  if (this->_internal_attacker_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_attacker_id());
  }

  // uint32 target_id = 2;
  if (this->_internal_target_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_target_id());
  }

  // uint32 bullet_id = 3;
  if (this->_internal_bullet_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_bullet_id());
  }

  // uint32 damage = 4;
  if (this->_internal_damage() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_damage());
  }

  // uint64 server_time_ms = 6;
  if (this->_internal_server_time_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_server_time_ms());
  }

  // uint32 target_hp = 5;
  if (this->_internal_target_hp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_target_hp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HitEvent::_class_data_ = {
    HitEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* HitEvent::GetClassData() const {
  return &_class_data_;
}

void HitEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HitEvent*>(&to_msg);
  auto& from = static_cast<const HitEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.HitEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_attacker_id() != 0) {
    _this->_internal_set_attacker_id(from._internal_attacker_id());
  }
  if (from._internal_target_id() != 0) {
    _this->_internal_set_target_id(from._internal_target_id());
  }
  if (from._internal_bullet_id() != 0) {
    _this->_internal_set_bullet_id(from._internal_bullet_id());
  }
  if (from._internal_damage() != 0) {
    _this->_internal_set_damage(from._internal_damage());
  }
  if (from._internal_server_time_ms() != 0) {
    _this->_internal_set_server_time_ms(from._internal_server_time_ms());
  }
  if (from._internal_target_hp() != 0) {
    _this->_internal_set_target_hp(from._internal_target_hp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HitEvent::CopyFrom(const HitEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.HitEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HitEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* HitEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void HitEvent::InternalSwap(HitEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.target_hp_)
      + sizeof(HitEvent::_impl_.target_hp_)
      - PROTOBUF_FIELD_OFFSET(HitEvent, _impl_.attacker_id_)>(
          reinterpret_cast<char*>(&_impl_.attacker_id_),
          reinterpret_cast<char*>(&other->_impl_.attacker_id_));
}

::google::protobuf::Metadata HitEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[13]);
}
// ===================================================================

class PlayerInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<PlayerInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_._has_bits_);
  static const ::game::Vector3& position(const PlayerInfo* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::game::Vector3& PlayerInfo::_Internal::position(const PlayerInfo* msg) {
  return *msg->_impl_.position_;
}
PlayerInfo::PlayerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.PlayerInfo)
}
inline PROTOBUF_NDEBUG_INLINE PlayerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        nickname_(arena, from.nickname_) {}

PlayerInfo::PlayerInfo(
    ::google::protobuf::Arena* arena,
    const PlayerInfo& from)
    : ::google::protobuf::Message(arena) {
  PlayerInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::game::Vector3>(arena, *from._impl_.position_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, player_id_),
           offsetof(Impl_, hp_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::hp_));

  // @@protoc_insertion_point(copy_constructor:game.PlayerInfo)
}
inline PROTOBUF_NDEBUG_INLINE PlayerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        nickname_(arena) {}

inline void PlayerInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, hp_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::hp_));
}
PlayerInfo::~PlayerInfo() {
  // @@protoc_insertion_point(destructor:game.PlayerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.nickname_.Destroy();
  delete _impl_.position_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:game.PlayerInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.position_ != nullptr);
    _impl_.position_->Clear();
  }
  ::memset(&_impl_.player_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.hp_) -
      reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.hp_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 32, 2> PlayerInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PlayerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 hp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerInfo, _impl_.hp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_.hp_)}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerInfo, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_.player_id_)}},
    // string nickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_.nickname_)}},
    // .game.Vector3 position = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_.player_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string nickname = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_.nickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .game.Vector3 position = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 hp = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_.hp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::game::Vector3>()},
  }}, {{
    "\17\0\10\0\0\0\0\0"
    "game.PlayerInfo"
    "nickname"
  }},
};

::uint8_t* PlayerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.PlayerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "game.PlayerInfo.nickname");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .game.Vector3 position = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // uint32 hp = 4;
  if (this->_internal_hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_hp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.PlayerInfo)
  return target;
}

::size_t PlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.PlayerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nickname());
  }

  // .game.Vector3 position = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
  }

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  // uint32 hp = 4;
  if (this->_internal_hp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_hp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PlayerInfo::_class_data_ = {
    PlayerInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PlayerInfo::GetClassData() const {
  return &_class_data_;
}

void PlayerInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PlayerInfo*>(&to_msg);
  auto& from = static_cast<const PlayerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.PlayerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_position()->::game::Vector3::MergeFrom(
        from._internal_position());
  }
  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  if (from._internal_hp() != 0) {
    _this->_internal_set_hp(from._internal_hp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerInfo::CopyFrom(const PlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.PlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PlayerInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PlayerInfo::InternalSwap(PlayerInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_.hp_)
      + sizeof(PlayerInfo::_impl_.hp_)
      - PROTOBUF_FIELD_OFFSET(PlayerInfo, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata PlayerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[14]);
}
// ===================================================================

class AllPlayerList::_Internal {
 public:
};

AllPlayerList::AllPlayerList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.AllPlayerList)
}
inline PROTOBUF_NDEBUG_INLINE AllPlayerList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : players_{visibility, arena, from.players_},
        _cached_size_{0} {}

AllPlayerList::AllPlayerList(
    ::google::protobuf::Arena* arena,
    const AllPlayerList& from)
    : ::google::protobuf::Message(arena) {
  AllPlayerList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:game.AllPlayerList)
}
inline PROTOBUF_NDEBUG_INLINE AllPlayerList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : players_{visibility, arena},
        _cached_size_{0} {}

inline void AllPlayerList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AllPlayerList::~AllPlayerList() {
  // @@protoc_insertion_point(destructor:game.AllPlayerList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AllPlayerList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AllPlayerList::Clear() {
// @@protoc_insertion_point(message_clear_start:game.AllPlayerList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AllPlayerList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AllPlayerList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AllPlayerList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .game.PlayerInfo players = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AllPlayerList, _impl_.players_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .game.PlayerInfo players = 1;
    {PROTOBUF_FIELD_OFFSET(AllPlayerList, _impl_.players_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::game::PlayerInfo>()},
  }}, {{
  }},
};

::uint8_t* AllPlayerList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.AllPlayerList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .game.PlayerInfo players = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_size()); i < n; i++) {
    const auto& repfield = this->_internal_players().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.AllPlayerList)
  return target;
}

::size_t AllPlayerList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.AllPlayerList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .game.PlayerInfo players = 1;
  total_size += 1UL * this->_internal_players_size();
  for (const auto& msg : this->_internal_players()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AllPlayerList::_class_data_ = {
    AllPlayerList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AllPlayerList::GetClassData() const {
  return &_class_data_;
}

void AllPlayerList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AllPlayerList*>(&to_msg);
  auto& from = static_cast<const AllPlayerList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.AllPlayerList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AllPlayerList::CopyFrom(const AllPlayerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.AllPlayerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AllPlayerList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AllPlayerList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AllPlayerList::InternalSwap(AllPlayerList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
}

::google::protobuf::Metadata AllPlayerList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[15]);
}
// ===================================================================

class PlayerStateUpdate::_Internal {
 public:
};

PlayerStateUpdate::PlayerStateUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.PlayerStateUpdate)
}
inline PROTOBUF_NDEBUG_INLINE PlayerStateUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : players_updated_{visibility, arena, from.players_updated_},
        players_removed_{visibility, arena, from.players_removed_},
        _players_removed_cached_byte_size_{0},
        _cached_size_{0} {}

PlayerStateUpdate::PlayerStateUpdate(
    ::google::protobuf::Arena* arena,
    const PlayerStateUpdate& from)
    : ::google::protobuf::Message(arena) {
  PlayerStateUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:game.PlayerStateUpdate)
}
inline PROTOBUF_NDEBUG_INLINE PlayerStateUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : players_updated_{visibility, arena},
        players_removed_{visibility, arena},
        _players_removed_cached_byte_size_{0},
        _cached_size_{0} {}

inline void PlayerStateUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PlayerStateUpdate::~PlayerStateUpdate() {
  // @@protoc_insertion_point(destructor:game.PlayerStateUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerStateUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PlayerStateUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:game.PlayerStateUpdate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_updated_.Clear();
  _impl_.players_removed_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerStateUpdate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> PlayerStateUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PlayerStateUpdate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated uint32 players_removed = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerStateUpdate, _impl_.players_removed_)}},
    // repeated .game.PlayerInfo players_updated = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerStateUpdate, _impl_.players_updated_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .game.PlayerInfo players_updated = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerStateUpdate, _impl_.players_updated_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 players_removed = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerStateUpdate, _impl_.players_removed_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::game::PlayerInfo>()},
  }}, {{
  }},
};

::uint8_t* PlayerStateUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.PlayerStateUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .game.PlayerInfo players_updated = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_updated_size()); i < n; i++) {
    const auto& repfield = this->_internal_players_updated().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint32 players_removed = 2;
  {
    int byte_size = _impl_._players_removed_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_players_removed(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.PlayerStateUpdate)
  return target;
}

::size_t PlayerStateUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.PlayerStateUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .game.PlayerInfo players_updated = 1;
  total_size += 1UL * this->_internal_players_updated_size();
  for (const auto& msg : this->_internal_players_updated()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated uint32 players_removed = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_players_removed())
    ;
    _impl_._players_removed_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PlayerStateUpdate::_class_data_ = {
    PlayerStateUpdate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PlayerStateUpdate::GetClassData() const {
  return &_class_data_;
}

void PlayerStateUpdate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PlayerStateUpdate*>(&to_msg);
  auto& from = static_cast<const PlayerStateUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.PlayerStateUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players_updated()->MergeFrom(
      from._internal_players_updated());
  _this->_internal_mutable_players_removed()->MergeFrom(from._internal_players_removed());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerStateUpdate::CopyFrom(const PlayerStateUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.PlayerStateUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerStateUpdate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PlayerStateUpdate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PlayerStateUpdate::InternalSwap(PlayerStateUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_updated_.InternalSwap(&other->_impl_.players_updated_);
  _impl_.players_removed_.InternalSwap(&other->_impl_.players_removed_);
}

::google::protobuf::Metadata PlayerStateUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[16]);
}
// ===================================================================

class GameMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<GameMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GameMessage, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::game::GameMessage, _impl_._oneof_case_);
  static const ::game::Header& header(const GameMessage* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::game::LoginRequest& login_request(const GameMessage* msg);
  static const ::game::LoginResponse& login_response(const GameMessage* msg);
  static const ::game::JoinRoomRequest& join_room_request(const GameMessage* msg);
  static const ::game::JoinRoomResponse& join_room_response(const GameMessage* msg);
  static const ::game::ChatSend& chat_send(const GameMessage* msg);
  static const ::game::ChatEvent& chat_event(const GameMessage* msg);
  static const ::game::MoveInput& move_input(const GameMessage* msg);
  static const ::game::MoveEvent& move_event(const GameMessage* msg);
  static const ::game::FireInput& fire_input(const GameMessage* msg);
  static const ::game::FireEvent& fire_event(const GameMessage* msg);
  static const ::game::HitEvent& hit_event(const GameMessage* msg);
  static const ::game::AllPlayerList& all_player_list(const GameMessage* msg);
  static const ::game::PlayerStateUpdate& player_state_update(const GameMessage* msg);
};

const ::game::Header& GameMessage::_Internal::header(const GameMessage* msg) {
  return *msg->_impl_.header_;
}
const ::game::LoginRequest& GameMessage::_Internal::login_request(const GameMessage* msg) {
  return *msg->_impl_.payload_.login_request_;
}
const ::game::LoginResponse& GameMessage::_Internal::login_response(const GameMessage* msg) {
  return *msg->_impl_.payload_.login_response_;
}
const ::game::JoinRoomRequest& GameMessage::_Internal::join_room_request(const GameMessage* msg) {
  return *msg->_impl_.payload_.join_room_request_;
}
const ::game::JoinRoomResponse& GameMessage::_Internal::join_room_response(const GameMessage* msg) {
  return *msg->_impl_.payload_.join_room_response_;
}
const ::game::ChatSend& GameMessage::_Internal::chat_send(const GameMessage* msg) {
  return *msg->_impl_.payload_.chat_send_;
}
const ::game::ChatEvent& GameMessage::_Internal::chat_event(const GameMessage* msg) {
  return *msg->_impl_.payload_.chat_event_;
}
const ::game::MoveInput& GameMessage::_Internal::move_input(const GameMessage* msg) {
  return *msg->_impl_.payload_.move_input_;
}
const ::game::MoveEvent& GameMessage::_Internal::move_event(const GameMessage* msg) {
  return *msg->_impl_.payload_.move_event_;
}
const ::game::FireInput& GameMessage::_Internal::fire_input(const GameMessage* msg) {
  return *msg->_impl_.payload_.fire_input_;
}
const ::game::FireEvent& GameMessage::_Internal::fire_event(const GameMessage* msg) {
  return *msg->_impl_.payload_.fire_event_;
}
const ::game::HitEvent& GameMessage::_Internal::hit_event(const GameMessage* msg) {
  return *msg->_impl_.payload_.hit_event_;
}
const ::game::AllPlayerList& GameMessage::_Internal::all_player_list(const GameMessage* msg) {
  return *msg->_impl_.payload_.all_player_list_;
}
const ::game::PlayerStateUpdate& GameMessage::_Internal::player_state_update(const GameMessage* msg) {
  return *msg->_impl_.payload_.player_state_update_;
}
void GameMessage::set_allocated_login_request(::game::LoginRequest* login_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (login_request) {
    ::google::protobuf::Arena* submessage_arena = login_request->GetArena();
    if (message_arena != submessage_arena) {
      login_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, login_request, submessage_arena);
    }
    set_has_login_request();
    _impl_.payload_.login_request_ = login_request;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.login_request)
}
void GameMessage::set_allocated_login_response(::game::LoginResponse* login_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (login_response) {
    ::google::protobuf::Arena* submessage_arena = login_response->GetArena();
    if (message_arena != submessage_arena) {
      login_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, login_response, submessage_arena);
    }
    set_has_login_response();
    _impl_.payload_.login_response_ = login_response;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.login_response)
}
void GameMessage::set_allocated_join_room_request(::game::JoinRoomRequest* join_room_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (join_room_request) {
    ::google::protobuf::Arena* submessage_arena = join_room_request->GetArena();
    if (message_arena != submessage_arena) {
      join_room_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, join_room_request, submessage_arena);
    }
    set_has_join_room_request();
    _impl_.payload_.join_room_request_ = join_room_request;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.join_room_request)
}
void GameMessage::set_allocated_join_room_response(::game::JoinRoomResponse* join_room_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (join_room_response) {
    ::google::protobuf::Arena* submessage_arena = join_room_response->GetArena();
    if (message_arena != submessage_arena) {
      join_room_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, join_room_response, submessage_arena);
    }
    set_has_join_room_response();
    _impl_.payload_.join_room_response_ = join_room_response;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.join_room_response)
}
void GameMessage::set_allocated_chat_send(::game::ChatSend* chat_send) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (chat_send) {
    ::google::protobuf::Arena* submessage_arena = chat_send->GetArena();
    if (message_arena != submessage_arena) {
      chat_send = ::google::protobuf::internal::GetOwnedMessage(message_arena, chat_send, submessage_arena);
    }
    set_has_chat_send();
    _impl_.payload_.chat_send_ = chat_send;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.chat_send)
}
void GameMessage::set_allocated_chat_event(::game::ChatEvent* chat_event) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (chat_event) {
    ::google::protobuf::Arena* submessage_arena = chat_event->GetArena();
    if (message_arena != submessage_arena) {
      chat_event = ::google::protobuf::internal::GetOwnedMessage(message_arena, chat_event, submessage_arena);
    }
    set_has_chat_event();
    _impl_.payload_.chat_event_ = chat_event;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.chat_event)
}
void GameMessage::set_allocated_move_input(::game::MoveInput* move_input) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (move_input) {
    ::google::protobuf::Arena* submessage_arena = move_input->GetArena();
    if (message_arena != submessage_arena) {
      move_input = ::google::protobuf::internal::GetOwnedMessage(message_arena, move_input, submessage_arena);
    }
    set_has_move_input();
    _impl_.payload_.move_input_ = move_input;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.move_input)
}
void GameMessage::set_allocated_move_event(::game::MoveEvent* move_event) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (move_event) {
    ::google::protobuf::Arena* submessage_arena = move_event->GetArena();
    if (message_arena != submessage_arena) {
      move_event = ::google::protobuf::internal::GetOwnedMessage(message_arena, move_event, submessage_arena);
    }
    set_has_move_event();
    _impl_.payload_.move_event_ = move_event;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.move_event)
}
void GameMessage::set_allocated_fire_input(::game::FireInput* fire_input) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (fire_input) {
    ::google::protobuf::Arena* submessage_arena = fire_input->GetArena();
    if (message_arena != submessage_arena) {
      fire_input = ::google::protobuf::internal::GetOwnedMessage(message_arena, fire_input, submessage_arena);
    }
    set_has_fire_input();
    _impl_.payload_.fire_input_ = fire_input;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.fire_input)
}
void GameMessage::set_allocated_fire_event(::game::FireEvent* fire_event) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (fire_event) {
    ::google::protobuf::Arena* submessage_arena = fire_event->GetArena();
    if (message_arena != submessage_arena) {
      fire_event = ::google::protobuf::internal::GetOwnedMessage(message_arena, fire_event, submessage_arena);
    }
    set_has_fire_event();
    _impl_.payload_.fire_event_ = fire_event;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.fire_event)
}
void GameMessage::set_allocated_hit_event(::game::HitEvent* hit_event) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (hit_event) {
    ::google::protobuf::Arena* submessage_arena = hit_event->GetArena();
    if (message_arena != submessage_arena) {
      hit_event = ::google::protobuf::internal::GetOwnedMessage(message_arena, hit_event, submessage_arena);
    }
    set_has_hit_event();
    _impl_.payload_.hit_event_ = hit_event;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.hit_event)
}
void GameMessage::set_allocated_all_player_list(::game::AllPlayerList* all_player_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (all_player_list) {
    ::google::protobuf::Arena* submessage_arena = all_player_list->GetArena();
    if (message_arena != submessage_arena) {
      all_player_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, all_player_list, submessage_arena);
    }
    set_has_all_player_list();
    _impl_.payload_.all_player_list_ = all_player_list;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.all_player_list)
}
void GameMessage::set_allocated_player_state_update(::game::PlayerStateUpdate* player_state_update) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (player_state_update) {
    ::google::protobuf::Arena* submessage_arena = player_state_update->GetArena();
    if (message_arena != submessage_arena) {
      player_state_update = ::google::protobuf::internal::GetOwnedMessage(message_arena, player_state_update, submessage_arena);
    }
    set_has_player_state_update();
    _impl_.payload_.player_state_update_ = player_state_update;
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameMessage.player_state_update)
}
GameMessage::GameMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game.GameMessage)
}
inline PROTOBUF_NDEBUG_INLINE GameMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payload_{},
        _oneof_case_{from._oneof_case_[0]} {}

GameMessage::GameMessage(
    ::google::protobuf::Arena* arena,
    const GameMessage& from)
    : ::google::protobuf::Message(arena) {
  GameMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::game::Header>(arena, *from._impl_.header_)
                : nullptr;
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kLoginRequest:
        _impl_.payload_.login_request_ = CreateMaybeMessage<::game::LoginRequest>(arena, *from._impl_.payload_.login_request_);
        break;
      case kLoginResponse:
        _impl_.payload_.login_response_ = CreateMaybeMessage<::game::LoginResponse>(arena, *from._impl_.payload_.login_response_);
        break;
      case kJoinRoomRequest:
        _impl_.payload_.join_room_request_ = CreateMaybeMessage<::game::JoinRoomRequest>(arena, *from._impl_.payload_.join_room_request_);
        break;
      case kJoinRoomResponse:
        _impl_.payload_.join_room_response_ = CreateMaybeMessage<::game::JoinRoomResponse>(arena, *from._impl_.payload_.join_room_response_);
        break;
      case kChatSend:
        _impl_.payload_.chat_send_ = CreateMaybeMessage<::game::ChatSend>(arena, *from._impl_.payload_.chat_send_);
        break;
      case kChatEvent:
        _impl_.payload_.chat_event_ = CreateMaybeMessage<::game::ChatEvent>(arena, *from._impl_.payload_.chat_event_);
        break;
      case kMoveInput:
        _impl_.payload_.move_input_ = CreateMaybeMessage<::game::MoveInput>(arena, *from._impl_.payload_.move_input_);
        break;
      case kMoveEvent:
        _impl_.payload_.move_event_ = CreateMaybeMessage<::game::MoveEvent>(arena, *from._impl_.payload_.move_event_);
        break;
      case kFireInput:
        _impl_.payload_.fire_input_ = CreateMaybeMessage<::game::FireInput>(arena, *from._impl_.payload_.fire_input_);
        break;
      case kFireEvent:
        _impl_.payload_.fire_event_ = CreateMaybeMessage<::game::FireEvent>(arena, *from._impl_.payload_.fire_event_);
        break;
      case kHitEvent:
        _impl_.payload_.hit_event_ = CreateMaybeMessage<::game::HitEvent>(arena, *from._impl_.payload_.hit_event_);
        break;
      case kAllPlayerList:
        _impl_.payload_.all_player_list_ = CreateMaybeMessage<::game::AllPlayerList>(arena, *from._impl_.payload_.all_player_list_);
        break;
      case kPlayerStateUpdate:
        _impl_.payload_.player_state_update_ = CreateMaybeMessage<::game::PlayerStateUpdate>(arena, *from._impl_.payload_.player_state_update_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:game.GameMessage)
}
inline PROTOBUF_NDEBUG_INLINE GameMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        payload_{},
        _oneof_case_{} {}

inline void GameMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
GameMessage::~GameMessage() {
  // @@protoc_insertion_point(destructor:game.GameMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.header_;
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void GameMessage::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:game.GameMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (payload_case()) {
    case kLoginRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.login_request_;
      }
      break;
    }
    case kLoginResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.login_response_;
      }
      break;
    }
    case kJoinRoomRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.join_room_request_;
      }
      break;
    }
    case kJoinRoomResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.join_room_response_;
      }
      break;
    }
    case kChatSend: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.chat_send_;
      }
      break;
    }
    case kChatEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.chat_event_;
      }
      break;
    }
    case kMoveInput: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.move_input_;
      }
      break;
    }
    case kMoveEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.move_event_;
      }
      break;
    }
    case kFireInput: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.fire_input_;
      }
      break;
    }
    case kFireEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.fire_event_;
      }
      break;
    }
    case kHitEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.hit_event_;
      }
      break;
    }
    case kAllPlayerList: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.all_player_list_;
      }
      break;
    }
    case kPlayerStateUpdate: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.player_state_update_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


PROTOBUF_NOINLINE void GameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:game.GameMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  clear_payload();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GameMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 14, 14, 0, 7> GameMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameMessage, _impl_._has_bits_),
    0, // no _extensions_
    41, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    535290366,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    14,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GameMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .game.Header header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.header_)}},
  }}, {{
    33, 0, 1,
    65148, 10,
    65535, 65535
  }}, {{
    // .game.Header header = 1;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.LoginRequest login_request = 10;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.login_request_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.LoginResponse login_response = 11;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.login_response_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.JoinRoomRequest join_room_request = 12;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.join_room_request_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.JoinRoomResponse join_room_response = 13;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.join_room_response_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.ChatSend chat_send = 20;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.chat_send_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.ChatEvent chat_event = 21;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.chat_event_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.MoveInput move_input = 30;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.move_input_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.MoveEvent move_event = 31;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.move_event_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.FireInput fire_input = 32;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.fire_input_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.FireEvent fire_event = 33;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.fire_event_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.HitEvent hit_event = 34;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.hit_event_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.AllPlayerList all_player_list = 40;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.all_player_list_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game.PlayerStateUpdate player_state_update = 41;
    {PROTOBUF_FIELD_OFFSET(GameMessage, _impl_.payload_.player_state_update_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::game::Header>()},
    {::_pbi::TcParser::GetTable<::game::LoginRequest>()},
    {::_pbi::TcParser::GetTable<::game::LoginResponse>()},
    {::_pbi::TcParser::GetTable<::game::JoinRoomRequest>()},
    {::_pbi::TcParser::GetTable<::game::JoinRoomResponse>()},
    {::_pbi::TcParser::GetTable<::game::ChatSend>()},
    {::_pbi::TcParser::GetTable<::game::ChatEvent>()},
    {::_pbi::TcParser::GetTable<::game::MoveInput>()},
    {::_pbi::TcParser::GetTable<::game::MoveEvent>()},
    {::_pbi::TcParser::GetTable<::game::FireInput>()},
    {::_pbi::TcParser::GetTable<::game::FireEvent>()},
    {::_pbi::TcParser::GetTable<::game::HitEvent>()},
    {::_pbi::TcParser::GetTable<::game::AllPlayerList>()},
    {::_pbi::TcParser::GetTable<::game::PlayerStateUpdate>()},
  }}, {{
  }},
};

::uint8_t* GameMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.GameMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .game.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  switch (payload_case()) {
    case kLoginRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, _Internal::login_request(this),
          _Internal::login_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kLoginResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, _Internal::login_response(this),
          _Internal::login_response(this).GetCachedSize(), target, stream);
      break;
    }
    case kJoinRoomRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, _Internal::join_room_request(this),
          _Internal::join_room_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kJoinRoomResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          13, _Internal::join_room_response(this),
          _Internal::join_room_response(this).GetCachedSize(), target, stream);
      break;
    }
    case kChatSend: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          20, _Internal::chat_send(this),
          _Internal::chat_send(this).GetCachedSize(), target, stream);
      break;
    }
    case kChatEvent: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          21, _Internal::chat_event(this),
          _Internal::chat_event(this).GetCachedSize(), target, stream);
      break;
    }
    case kMoveInput: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          30, _Internal::move_input(this),
          _Internal::move_input(this).GetCachedSize(), target, stream);
      break;
    }
    case kMoveEvent: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          31, _Internal::move_event(this),
          _Internal::move_event(this).GetCachedSize(), target, stream);
      break;
    }
    case kFireInput: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          32, _Internal::fire_input(this),
          _Internal::fire_input(this).GetCachedSize(), target, stream);
      break;
    }
    case kFireEvent: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          33, _Internal::fire_event(this),
          _Internal::fire_event(this).GetCachedSize(), target, stream);
      break;
    }
    case kHitEvent: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          34, _Internal::hit_event(this),
          _Internal::hit_event(this).GetCachedSize(), target, stream);
      break;
    }
    case kAllPlayerList: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          40, _Internal::all_player_list(this),
          _Internal::all_player_list(this).GetCachedSize(), target, stream);
      break;
    }
    case kPlayerStateUpdate: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          41, _Internal::player_state_update(this),
          _Internal::player_state_update(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.GameMessage)
  return target;
}

::size_t GameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.GameMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .game.Header header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.header_);
  }

  switch (payload_case()) {
    // .game.LoginRequest login_request = 10;
    case kLoginRequest: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.login_request_);
      break;
    }
    // .game.LoginResponse login_response = 11;
    case kLoginResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.login_response_);
      break;
    }
    // .game.JoinRoomRequest join_room_request = 12;
    case kJoinRoomRequest: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.join_room_request_);
      break;
    }
    // .game.JoinRoomResponse join_room_response = 13;
    case kJoinRoomResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.join_room_response_);
      break;
    }
    // .game.ChatSend chat_send = 20;
    case kChatSend: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.chat_send_);
      break;
    }
    // .game.ChatEvent chat_event = 21;
    case kChatEvent: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.chat_event_);
      break;
    }
    // .game.MoveInput move_input = 30;
    case kMoveInput: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.move_input_);
      break;
    }
    // .game.MoveEvent move_event = 31;
    case kMoveEvent: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.move_event_);
      break;
    }
    // .game.FireInput fire_input = 32;
    case kFireInput: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.fire_input_);
      break;
    }
    // .game.FireEvent fire_event = 33;
    case kFireEvent: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.fire_event_);
      break;
    }
    // .game.HitEvent hit_event = 34;
    case kHitEvent: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.hit_event_);
      break;
    }
    // .game.AllPlayerList all_player_list = 40;
    case kAllPlayerList: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.all_player_list_);
      break;
    }
    // .game.PlayerStateUpdate player_state_update = 41;
    case kPlayerStateUpdate: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.player_state_update_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GameMessage::_class_data_ = {
    GameMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GameMessage::GetClassData() const {
  return &_class_data_;
}

void GameMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GameMessage*>(&to_msg);
  auto& from = static_cast<const GameMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.GameMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_header()->::game::Header::MergeFrom(
        from._internal_header());
  }
  switch (from.payload_case()) {
    case kLoginRequest: {
      _this->_internal_mutable_login_request()->::game::LoginRequest::MergeFrom(
          from._internal_login_request());
      break;
    }
    case kLoginResponse: {
      _this->_internal_mutable_login_response()->::game::LoginResponse::MergeFrom(
          from._internal_login_response());
      break;
    }
    case kJoinRoomRequest: {
      _this->_internal_mutable_join_room_request()->::game::JoinRoomRequest::MergeFrom(
          from._internal_join_room_request());
      break;
    }
    case kJoinRoomResponse: {
      _this->_internal_mutable_join_room_response()->::game::JoinRoomResponse::MergeFrom(
          from._internal_join_room_response());
      break;
    }
    case kChatSend: {
      _this->_internal_mutable_chat_send()->::game::ChatSend::MergeFrom(
          from._internal_chat_send());
      break;
    }
    case kChatEvent: {
      _this->_internal_mutable_chat_event()->::game::ChatEvent::MergeFrom(
          from._internal_chat_event());
      break;
    }
    case kMoveInput: {
      _this->_internal_mutable_move_input()->::game::MoveInput::MergeFrom(
          from._internal_move_input());
      break;
    }
    case kMoveEvent: {
      _this->_internal_mutable_move_event()->::game::MoveEvent::MergeFrom(
          from._internal_move_event());
      break;
    }
    case kFireInput: {
      _this->_internal_mutable_fire_input()->::game::FireInput::MergeFrom(
          from._internal_fire_input());
      break;
    }
    case kFireEvent: {
      _this->_internal_mutable_fire_event()->::game::FireEvent::MergeFrom(
          from._internal_fire_event());
      break;
    }
    case kHitEvent: {
      _this->_internal_mutable_hit_event()->::game::HitEvent::MergeFrom(
          from._internal_hit_event());
      break;
    }
    case kAllPlayerList: {
      _this->_internal_mutable_all_player_list()->::game::AllPlayerList::MergeFrom(
          from._internal_all_player_list());
      break;
    }
    case kPlayerStateUpdate: {
      _this->_internal_mutable_player_state_update()->::game::PlayerStateUpdate::MergeFrom(
          from._internal_player_state_update());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameMessage::CopyFrom(const GameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.GameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GameMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GameMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GameMessage::InternalSwap(GameMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.header_, other->_impl_.header_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GameMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_5fmessage_2eproto_getter, &descriptor_table_game_5fmessage_2eproto_once,
      file_level_metadata_game_5fmessage_2eproto[17]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace game
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
